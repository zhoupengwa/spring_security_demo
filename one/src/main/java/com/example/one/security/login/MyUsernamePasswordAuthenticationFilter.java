package com.example.one.security.login;import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;import org.springframework.security.core.Authentication;import org.springframework.security.core.AuthenticationException;import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;import org.springframework.security.web.util.matcher.AntPathRequestMatcher;import org.springframework.stereotype.Component;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;/** * @author zhoupeng create on 2021/7/19 */@Componentpublic class MyUsernamePasswordAuthenticationFilter extends UsernamePasswordAuthenticationFilter {    private final MyAuthenticationDetailsSource myAuthenticationDetailsSource;    public MyUsernamePasswordAuthenticationFilter(MyAuthenticationManager myAuthenticationManager, MyLoginSuccHandler loginSuccHandler, MyLoginFailHandler loginFailHandler, MyAuthenticationDetailsSource authenticationDetailsSource) {        super();        //重写登录地址        this.setRequiresAuthenticationRequestMatcher(new AntPathRequestMatcher("/api/rest/login", "POST"));        //验证逻辑        this.setAuthenticationManager(myAuthenticationManager);        //登录成功逻辑        this.setAuthenticationSuccessHandler(loginSuccHandler);        //登录失败逻辑        this.setAuthenticationFailureHandler(loginFailHandler);        myAuthenticationDetailsSource = authenticationDetailsSource;    }    @Override    public Authentication attemptAuthentication(HttpServletRequest request, HttpServletResponse response) throws AuthenticationException {        String name = request.getParameter("name");        String pwd = request.getParameter("pwd");        System.out.println("=====user login:" + name + "  " + pwd);        UsernamePasswordAuthenticationToken auth = new UsernamePasswordAuthenticationToken(name, pwd, null);        auth.setDetails(myAuthenticationDetailsSource.buildDetails(request));        return super.getAuthenticationManager().authenticate(auth);    }}