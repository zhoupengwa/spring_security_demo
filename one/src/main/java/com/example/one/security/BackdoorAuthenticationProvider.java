package com.example.one.security;import org.springframework.security.authentication.AuthenticationProvider;import org.springframework.security.authentication.BadCredentialsException;import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;import org.springframework.security.core.Authentication;import org.springframework.security.core.AuthenticationException;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.stereotype.Component;import java.util.ArrayList;import java.util.Collection;/** * @author zhoupeng create on 2021/7/13 */@Componentpublic class BackdoorAuthenticationProvider implements AuthenticationProvider {    @Override    public Authentication authenticate(Authentication authentication) throws AuthenticationException {        String name = authentication.getName();        String pwd = authentication.getCredentials().toString();        System.out.println("user login: " + name + " - " + pwd);        //利用alex用户名登录，不管密码是什么都可以，伪装成admin用户        if (name.equals("alex")) {            Collection<GrantedAuthority> authorityCollection = new ArrayList<>();            authorityCollection.add(new SimpleGrantedAuthority("ROLE_ADMIN"));            authorityCollection.add(new SimpleGrantedAuthority("ROLE_USER"));            return new UsernamePasswordAuthenticationToken("admin", pwd, authorityCollection);        } else {            return null;        }    }    @Override    public boolean supports(Class<?> clazz) {        return clazz.equals(UsernamePasswordAuthenticationToken.class);    }}